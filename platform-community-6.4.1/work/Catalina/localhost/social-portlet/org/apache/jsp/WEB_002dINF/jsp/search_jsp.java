/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2023-08-24 09:54:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.lang3.StringUtils;
import java.util.HashSet;
import org.gatein.portal.controller.resource.ResourceRequestHandler;
import org.exoplatform.portal.resource.SkinService;
import org.exoplatform.services.resources.Orientation;
import org.exoplatform.portal.resource.SkinURL;
import org.exoplatform.portal.resource.SkinConfig;
import org.exoplatform.web.ControllerContext;
import org.exoplatform.portal.application.PortalRequestContext;
import org.exoplatform.social.rest.api.EntityBuilder;
import org.exoplatform.social.core.search.SearchConnector;
import java.util.Set;
import org.exoplatform.container.ExoContainerContext;
import org.exoplatform.social.core.search.SearchService;
import java.util.Locale;
import org.exoplatform.services.resources.ResourceBundleService;
import java.util.ResourceBundle;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.exoplatform.services.resources.Orientation");
    _jspx_imports_classes.add("org.exoplatform.social.core.search.SearchConnector");
    _jspx_imports_classes.add("org.exoplatform.portal.resource.SkinConfig");
    _jspx_imports_classes.add("org.exoplatform.container.ExoContainerContext");
    _jspx_imports_classes.add("org.exoplatform.services.resources.ResourceBundleService");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("org.exoplatform.web.ControllerContext");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringUtils");
    _jspx_imports_classes.add("java.util.HashSet");
    _jspx_imports_classes.add("org.exoplatform.social.rest.api.EntityBuilder");
    _jspx_imports_classes.add("org.exoplatform.social.core.search.SearchService");
    _jspx_imports_classes.add("org.exoplatform.portal.resource.SkinService");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("org.gatein.portal.controller.resource.ResourceRequestHandler");
    _jspx_imports_classes.add("org.exoplatform.portal.resource.SkinURL");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("org.exoplatform.portal.application.PortalRequestContext");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

  SearchService searchService = ExoContainerContext.getService(SearchService.class);
  SkinService skinService = ExoContainerContext.getService(SkinService.class);
  Set<SearchConnector> connectors = searchService.getEnabledConnectors();
  String jsonSearchConnectors = EntityBuilder.toJsonString(connectors);
  PortalRequestContext rcontext = (PortalRequestContext) PortalRequestContext.getCurrentInstance();
  ControllerContext controllerContext = rcontext.getControllerContext();
  Orientation orientation = rcontext.getOrientation();
  Set<String> skinURLs = new HashSet<>();
  for (SearchConnector connector : connectors) {
    SkinConfig skinConfig = null;
    if (connector.getCssModule() != null) {
      skinConfig = skinService.getSkin(connector.getCssModule(), null);
    }
    if (skinConfig != null) {
      SkinURL url = skinConfig.createURL(controllerContext);
      url.setOrientation(orientation);
      skinURLs.add(url.toString());
    } 
  }
  String skinUrlsString = "[\"" + StringUtils.join(skinURLs, "\",\"") + "\"]";
  ResourceBundle bundle;
  try {
    bundle = ExoContainerContext.getService(ResourceBundleService.class).getResourceBundle("locale.portlet.Portlets", request.getLocale());
  } catch (Exception e) {
    bundle = ExoContainerContext.getService(ResourceBundleService.class).getResourceBundle("locale.portlet.Portlets", Locale.ENGLISH);
  }
  String tooltip = bundle.getString("Search.button.tooltip");

      out.write("\n");
      out.write("<div class=\"VuetifyApp\">\n");
      out.write("  <div data-app=\"true\"\n");
      out.write("    class=\"v-application v-application--is-ltr theme--light\"\n");
      out.write("    id=\"SearchApplication\"\n");
      out.write("    role=\"search\">\n");
      out.write("    <div class=\"v-application--wrap\">\n");
      out.write("      <button\n");
      out.write("        type=\"button\"\n");
      out.write("        title=\"");
      out.print(tooltip);
      out.write("\"\n");
      out.write("        class=\"transparent v-btn v-btn--flat v-btn--icon v-btn--round theme--light v-size--default\"\n");
      out.write("        onclick=\"Vue.startApp('PORTLET/social-portlet/Search', 'init')\">\n");
      out.write("        <span class=\"v-btn__content\">\n");
      out.write("          <i class=\"v-icon fas fa-search position-static d-flex icon-medium-size icon-default-color\"></i>\n");
      out.write("        </span>\n");
      out.write("      </button>\n");
      out.write("    </div>\n");
      out.write("    <textarea id=\"searchConnectorsDefaultValue\" class=\"hidden\">");
      out.print( jsonSearchConnectors);
      out.write("</textarea>\n");
      out.write("    <textarea id=\"searchSkinUrlsDefaultValue\" class=\"hidden\">");
      out.print( skinUrlsString);
      out.write("</textarea>\n");
      out.write("    ");
 if (rcontext.getRequestURI().endsWith("/search")) { 
      out.write("\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("      require(['PORTLET/social-portlet/Search'], app => app.init());\n");
      out.write("    </script>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("  </div>\n");
      out.write("</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
