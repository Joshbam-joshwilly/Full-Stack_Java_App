/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.60
 * Generated at: 2023-08-24 09:52:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.welcome_002dscreens;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ResourceBundle;
import org.exoplatform.container.PortalContainer;
import org.exoplatform.services.resources.ResourceBundleService;
import org.exoplatform.portal.config.UserPortalConfigService;
import org.exoplatform.portal.resource.SkinService;
import org.gatein.portal.controller.resource.ResourceRequestHandler;
import org.exoplatform.portal.resource.SkinConfig;
import org.exoplatform.portal.branding.Utils;

public final class accountSetup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.exoplatform.container.PortalContainer");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("org.exoplatform.portal.resource.SkinService");
    _jspx_imports_classes.add("org.exoplatform.services.resources.ResourceBundleService");
    _jspx_imports_classes.add("org.gatein.portal.controller.resource.ResourceRequestHandler");
    _jspx_imports_classes.add("org.exoplatform.portal.resource.SkinConfig");
    _jspx_imports_classes.add("org.exoplatform.portal.branding.Utils");
    _jspx_imports_classes.add("org.exoplatform.portal.config.UserPortalConfigService");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    /**
     * Copyright ( C ) 2012 eXo Platform SAS.
     *
     * This is free software; you can redistribute it and/or modify it
     * under the terms of the GNU Lesser General Public License as
     * published by the Free Software Foundation; either version 2.1 of
     * the License, or (at your option) any later version.
     *
     * This software is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     * Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this software; if not, write to the Free
     * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
     */

      out.write('\n');
      out.write('\n');

    String usernameRegExp = System.getProperty("gatein.validators.username.regexp");
    if(usernameRegExp==null) usernameRegExp="";
    String formatMsg = System.getProperty("gatein.validators.username.format.message");
    String usernameMinLength = System.getProperty("gatein.validators.username.length.min");
    String usernameMaxLength = System.getProperty("gatein.validators.username.length.max");
    int max=0;
    int min=0;
    if(usernameMaxLength!=null) {
        max = Integer.parseInt(usernameMaxLength);
    }
    if(usernameMinLength!=null) {
        min = Integer.parseInt(usernameMinLength);
    }
    String contextPath = request.getContextPath() ;
    String lang = request.getLocale().getLanguage();
    response.setCharacterEncoding("UTF-8");
    response.setContentType("text/html; charset=UTF-8");

  PortalContainer portalContainer = PortalContainer.getCurrentInstance(session.getServletContext());
  ResourceBundleService service = (ResourceBundleService) portalContainer.getComponentInstanceOfType(ResourceBundleService.class);
  ResourceBundle rb = service.getResourceBundle(service.getSharedResourceBundleNames(), request.getLocale());

  UserPortalConfigService userPortalConfigService = portalContainer.getComponentInstanceOfType(UserPortalConfigService.class);
  String skinName = userPortalConfigService.getDefaultPortalSkinName();
  SkinService skinService = portalContainer.getComponentInstanceOfType(SkinService.class);
  SkinConfig skin = skinService.getSkin("portal/AccountSetup", skinName);
  String cssPath = "";
  if(skin != null) {
    cssPath = skin.getCSSPath()+"?v="+ResourceRequestHandler.VERSION;
  } else {
    cssPath = skinService.getSkin("portal/AccountSetup", "Enterprise").getCSSPath()+"?v="+ResourceRequestHandler.VERSION;
  }

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"");
      out.print(lang);
      out.write("\" lang=\"");
      out.print(lang);
      out.write("\">\n");
      out.write("<head>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\"  href=\"");
      out.print( Utils.getFaviconPath() );
      out.write("\" />\n");
      out.write("    <link id=\"brandingSkin\" rel=\"stylesheet\" type=\"text/css\" href=\"/rest/v1/platform/branding/css\">\n");
      out.write("    <link href=\"/commons-extension/css/welcome-screens/jquery.qtip.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("    <link href=\"");
      out.print(cssPath);
      out.write("\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("\n");
      out.write("    <script type=\"text/javascript\" src=\"/eXoResources/javascript/jquery-3.2.1.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"/commons-extension/javascript/ie-placeholder.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"/commons-extension/javascript/welcome-screens/accountSetup.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<div class=\"backLight\"></div>\n");
      out.write("<div class=\"uiWelcomeBox\" id=\"AccountSetup1\"  >\n");
      out.write("    <div class=\"header\">");
      out.print(rb.getString("AccountSetupViewServlet.label.header1"));
      out.write("</div>\n");
      out.write("    <div class=\"content form-horizontal\" id=\"AccountSetup\">\n");
      out.write("        <h5>");
      out.print(rb.getString("AccountSetupViewServlet.label.create_account"));
      out.write("</h5>\n");
      out.write("        <p class=\"desc\">");
      out.print(rb.getString("AccountSetupViewServlet.label.primary_user"));
      out.write("</p>\n");
      out.write("        <form name=\"tcForm\" action=\"");
      out.print( contextPath + "/accountSetupAction");
      out.write("\" method=\"post\">\n");
      out.write("            <div class=\"control-group\" id =\"usernameId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.userName"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\">\n");
      out.write("                    <input type=\"text\" name=\"username\" id=\"userNameAccount\" placeholder=\"");
      out.print(rb.getString("AccountSetupViewServlet.label.user_Name"));
      out.write("\" class=\"inputFieldLarge\"/>\n");
      out.write("                    <input type=\"hidden\" id=\"usernameRegExpid\" value=\"");
      out.print(usernameRegExp);
      out.write("\"/>\n");
      out.write("                    <input type=\"hidden\" id=\"formatMsgid\" value=\"");
      out.print(formatMsg);
      out.write("\"/>\n");
      out.write("                    <input type=\"hidden\" id=\"usernameMaxLengthid\" value=\"");
      out.print(max);
      out.write("\"/>\n");
      out.write("                    <input type=\"hidden\" id=\"usernameMinLengthid\" value=\"");
      out.print(min);
      out.write("\"/>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"control-group\" id=\"fullnameId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.full_Name"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\"><input type=\"text\" name=\"firstNameAccount\" id=\"firstNameAccount\" placeholder=\"");
      out.print(rb.getString("AccountSetupViewServlet.label.first_Name"));
      out.write("\" class=\"inputFieldMedium\"/><input type=\"text\" name=\"lastNameAccount\" id=\"lastNameAccount\" placeholder=\"");
      out.print(rb.getString("AccountSetupViewServlet.label.last_Name"));
      out.write("\" class=\"inputFieldMedium\" /></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"control-group\" id=\"emailId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.email"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\"><input type=\"text\" name=\"emailAccount\" id=\"emailAccount\" class=\"inputFieldLarge\" /></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"control-group\" id=\"passwordId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.password"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\"><input type=\"password\" name=\"password\" id=\"userPasswordAccount\" class=\"inputFieldMini\" /><span class=\"confirmLabel\">");
      out.print(rb.getString("AccountSetupViewServlet.label.confirm"));
      out.write(":</span><input type=\"password\" name=\"confirmUserPasswordAccount\" id=\"confirmUserPasswordAccount\" class=\"inputFieldMini\" />\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <h5>");
      out.print(rb.getString("AccountSetupViewServlet.label.addmin_password"));
      out.write("</h5>\n");
      out.write("            <p class=\"desc\">");
      out.print(rb.getString("AccountSetupViewServlet.label.login_root"));
      out.write("</p>\n");
      out.write("            <div class=\"control-group\" id=\"adminUsernameId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.userName"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\"><input type=\"text\" name=\"adminFirstName\" id=\"adminFirstName\" placeholder=\"root\" readonly=\"readonly\" class=\"inputFieldLarge disable\" /></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"control-group\" id=\"adminPasswordId\">\n");
      out.write("                <label class=\"control-label\">");
      out.print(rb.getString("AccountSetupViewServlet.label.password"));
      out.write(":</label>\n");
      out.write("                <div class=\"controls\">\n");
      out.write("                    <input type=\"password\" name=\"adminPassword\" id=\"adminPassword\" class=\"inputFieldMini\" /><span class=\"confirmLabel\">");
      out.print(rb.getString("AccountSetupViewServlet.label.confirm"));
      out.write(":</span><input type=\"password\" name=\"confirmAdminPassword\" id=\"confirmAdminPassword\" class=\"inputFieldMini\" />\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- Please do not make it Button it may cause blocker problem -->\n");
      out.write("    <div class=\"bottom\">\n");
      out.write("        <button class=\"btn btn-primary\" id=\"continueButton\" onclick=\"WelcomeScreens.exit();return false;\">");
      out.print(rb.getString("AccountSetupViewServlet.label.submit"));
      out.write("</button>\n");
      out.write("        <button class=\"btn\" name=\"setupbutton\" value=\"skipform\">");
      out.print(rb.getString("AccountSetupViewServlet.label.skip"));
      out.write("</button>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<div>\n");
      out.write("    <!--	<div class=\"backLight\"></div>    -->\n");
      out.write("    <div class=\"uiWelcomeBox\" id=\"Greetings\" style=\"display: none\">\n");
      out.write("        <div class=\"header\">");
      out.print(rb.getString("AccountSetupViewServlet.label.greetings"));
      out.write("</div>\n");
      out.write("        <div class=\"content form-horizontal\" id=\"AccountSetup\">\n");
      out.write("            <p>\n");
      out.write("                <strong>");
      out.print(rb.getString("AccountSetupViewServlet.label.almost_done"));
      out.write("</strong>, ");
      out.print(rb.getString("AccountSetupViewServlet.label.add_your_colleagues"));
      out.write(".\n");
      out.write("            </p>\n");
      out.write("            <div class=\"screenShot\"><a href=\"javascript:void(0);\"></a></div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"bottom\"><button name=\"setupbutton\" value=\"submitform\" class=\"btn btn-primary\">");
      out.print(rb.getString("AccountSetupViewServlet.label.start"));
      out.write("</button></div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</form>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
