define((()=>(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{init:()=>y});var r=function(){var e=this,t=e._self._c;return t("v-app",{staticClass:"white"},[t("v-card",{attrs:{flat:""}},[t("membership-types-management-toolbar"),e._v(" "),t("membership-types-management-list"),e._v(" "),t("membership-types-management-form-drawer")],1)],1)};function s(e,t,r,s,i,n,a,o){var p,m="function"==typeof e?e.options:e;if(t&&(m.render=t,m.staticRenderFns=r,m._compiled=!0),s&&(m.functional=!0),n&&(m._scopeId="data-v-"+n),a?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},m._ssrRegister=p):i&&(p=o?function(){i.call(this,(m.functional?this.parent:this).$root.$options.shadowRoot)}:i),p)if(m.functional){m._injectStyles=p;var l=m.render;m.render=function(e,t){return p.call(t),l(e,t)}}else{var h=m.beforeCreate;m.beforeCreate=h?[].concat(h,p):[p]}return{exports:e,options:m}}r._withStripped=!0;const i=s({},r,[],!1,null,null,null).exports;var n=function(){var e=this,t=e._self._c;return t("div",[t("exo-confirm-dialog",{ref:"deleteConfirmDialog",attrs:{message:e.deleteConfirmMessage,title:e.$t("MembershipTypesManagement.title.confirmDelete"),"ok-label":e.$t("MembershipTypesManagement.button.ok"),"cancel-label":e.$t("MembershipTypesManagement.button.cancel")},on:{ok:function(t){return e.deleteConfirm()}}}),e._v(" "),e.error?t("v-card-text",{staticClass:"errorMessage"},[t("v-alert",{attrs:{type:"error"}},[e._v("\n      "+e._s(e.error)+"\n    ")])],1):e._e(),e._v(" "),t("v-data-table",{staticClass:"data-table-light-border",attrs:{headers:e.headers,items:e.filteredMembershipTypes,loading:e.loading,options:e.options,"footer-props":{itemsPerPageOptions:e.itemsPerPageOptions},"hide-default-footer":!e.hasPages,"loading-text":e.$t("UsersManagement.loadingResults"),"no-results-text":e.$t("UsersManagement.noResultsFound"),"no-data-text":e.$t("UsersManagement.noData")},on:{"update:options":function(t){e.options=t}},scopedSlots:e._u([{key:"item.createdDate",fn:function({item:r}){return[t("date-format",{attrs:{value:r.createdDate&&r.createdDate.time,format:e.dateTimeFormat}})]}},{key:"item.modifiedDate",fn:function({item:r}){return[t("date-format",{attrs:{value:r.modifiedDate&&r.modifiedDate.time,format:e.dateTimeFormat}})]}},{key:"item.actions",fn:function({item:r}){return[t("v-btn",{attrs:{title:e.$t("MembershipTypesManagement.editMembershipType"),primary:"",icon:"",text:""},on:{click:function(t){return e.$root.$emit("editMembershipType",r)}}},[t("i",{staticClass:"uiIconEdit"})]),e._v(" "),t("v-btn",{attrs:{title:e.$t("MembershipTypesManagement.button.delete"),primary:"",icon:"",text:""},on:{click:function(t){return e.deleteMembershipType(r)}}},[t("i",{staticClass:"uiIconTrash"})])]}}])})],1)};n._withStripped=!0;const a=s({data:()=>({startTypingKeywordTimeout:0,itemsPerPageOptions:[20,50,100],membershipTypes:[],selectedMembershipType:null,deleteConfirmMessage:null,keyword:null,dateTimeFormat:{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit"},pageSize:20,options:{page:1,itemsPerPage:20},loading:!0,error:null}),computed:{hasPages(){return this.membershipTypes.length>this.pageSize},filteredMembershipTypes(){return this.keyword?this.membershipTypes.slice().filter((e=>e&&e.name&&e.name.toLowerCase().indexOf(this.keyword.toLowerCase())>=0||e.description&&e.description.toLowerCase().indexOf(this.keyword.toLowerCase())>=0)):this.membershipTypes.slice()},headers(){return[{text:this.$t&&this.$t("MembershipTypesManagement.name"),value:"name",align:"center",sortable:!1},{text:this.$t&&this.$t("MembershipTypesManagement.description"),value:"description",align:"center",sortable:!1},{text:this.$t&&this.$t("MembershipTypesManagement.createdDate"),value:"createdDate",align:"center",sortable:!1},{text:this.$t&&this.$t("MembershipTypesManagement.modifiedDate"),value:"modifiedDate",align:"center",sortable:!1},{text:this.$t&&this.$t("MembershipTypesManagement.actions"),value:"actions",align:"center",sortable:!1}]}},watch:{keyword(){this.options.page=1,this.searchMembershipTypes()}},created(){this.$root.$on("searchMembershipType",this.updateSearchTerms),this.$root.$on("refreshMembershipTypes",this.searchMembershipTypes),this.searchMembershipTypes().finally((()=>this.$root.$applicationLoaded()))},methods:{updateSearchTerms(e){this.keyword=e},deleteMembershipType(e){this.selectedMembershipType=e,this.deleteConfirmMessage=this.$t("MembershipTypesManagement.message.confirmDelete",{0:this.selectedMembershipType.name}),this.$refs.deleteConfirmDialog.open()},deleteConfirm(){return this.loading=!0,fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/v1/membershipTypes/${this.selectedMembershipType.name}`,{method:"DELETE",credentials:"include"}).then((e=>{if(!e||!e.ok){if(e&&400===e.status)return e.text().then((e=>{throw new Error(e)}));throw new Error(this.$t("IDMManagement.error.UnknownServerError"))}return this.searchMembershipTypes()})).catch((e=>{const t=`MembershipTypesManagement.error.${e=e.message||String(e)}`,r=this.$t(t,{0:this.selectedMembershipType.name});r!==t&&(e=r),this.error=e,window.setTimeout((()=>{this.error=null}),5e3)})).finally((()=>this.loading=!1))},searchMembershipTypes(){return this.loading=!0,fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/v1/membershipTypes`,{method:"GET",credentials:"include"}).then((e=>{if(e&&e.ok)return e.json();throw new Error(this.$t("IDMManagement.error.UnknownServerError"))})).then((e=>{this.membershipTypes=e||[]})).finally((()=>this.loading=!1))}}},n,[],!1,null,null,null).exports;var o=function(){var e=this,t=e._self._c;return t("v-toolbar",{attrs:{id:"membershipTypesManagementToolbar",flat:""}},[t("v-toolbar-title",[t("v-btn",{staticClass:"btn btn-primary addNewMembershipTypeButton",on:{click:function(t){return e.$root.$emit("addNewMembershipType")}}},[t("i",{staticClass:"uiIconSocSimplePlus uiIconWhite me-md-3"}),e._v(" "),t("span",{staticClass:"d-none d-sm-inline"},[e._v("\n        "+e._s(e.$t("MembershipTypesManagement.addMembershipType"))+"\n      ")])])],1),e._v(" "),t("v-spacer"),e._v(" "),t("v-scale-transition",[t("v-text-field",{staticClass:"inputMembershipTypeFilter pa-0 me-3 my-auto",attrs:{placeholder:e.$t("MembershipTypesManagement.filterBy"),"prepend-inner-icon":"fa-filter"},model:{value:e.keyword,callback:function(t){e.keyword=t},expression:"keyword"}})],1)],1)};o._withStripped=!0;const p=s({data:()=>({keyword:null}),watch:{keyword(){this.$root.$emit("searchMembershipType",this.keyword)}}},o,[],!1,null,null,null).exports;var m=function(){var e=this,t=e._self._c;return t("exo-drawer",{ref:"membershipTypeFormDrawer",attrs:{id:"membershipTypeFormDrawer",right:""},on:{closed:function(t){e.drawer=!1}}},[t("template",{slot:"title"},[e._v("\n    "+e._s(e.title)+"\n  ")]),e._v(" "),t("template",{slot:"content"},[t("v-form",{ref:"membershipTypeForm",staticClass:"form-horizontal pt-0 pb-4",attrs:{flat:""},on:{submit:e.saveMembershipType}},[e.error?t("v-card-text",{staticClass:"errorMessage"},[t("v-alert",{attrs:{type:"error"}},[e._v("\n          "+e._s(e.error)+"\n        ")])],1):e._e(),e._v(" "),t("v-card-text",{staticClass:"d-flex membershipTypeNameLabel flex-grow-1 text-no-wrap text-left font-weight-bold pb-2"},[e._v("\n        "+e._s(e.$t("MembershipTypesManagement.name"))),e.newMembershipType?[e._v("*")]:e._e()],2),e._v(" "),t("v-card-text",{staticClass:"d-flex membershipTypeNameField py-0"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.membershipType.name,expression:"membershipType.name"}],ref:"nameInput",staticClass:"ignore-vuetify-classes flex-grow-1",attrs:{disabled:e.saving||!e.newMembershipType,autofocus:e.drawer,placeholder:e.$t("MembershipTypesManagement.namePlaceholder"),type:"text",maxlength:"2000",required:""},domProps:{value:e.membershipType.name},on:{input:function(t){t.target.composing||e.$set(e.membershipType,"name",t.target.value)}}})]),e._v(" "),t("v-card-text",{staticClass:"d-flex descriptionLabel flex-grow-1 text-no-wrap text-left font-weight-bold pb-2"},[e._v("\n        "+e._s(e.$t("MembershipTypesManagement.description"))+"\n      ")]),e._v(" "),t("v-card-text",{staticClass:"d-flex descriptionField py-0"},[t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.membershipType.description,expression:"membershipType.description"}],ref:"descriptionInput",staticClass:"ignore-vuetify-classes flex-grow-1 textarea-no-resize",attrs:{disabled:e.saving,placeholder:e.$t("MembershipTypesManagement.descriptionPlaceholder"),type:"text",maxlength:"2000",required:""},domProps:{value:e.membershipType.description},on:{input:function(t){t.target.composing||e.$set(e.membershipType,"description",t.target.value)}}})])],1)],1),e._v(" "),t("template",{slot:"footer"},[t("div",{staticClass:"d-flex"},[t("v-spacer"),e._v(" "),t("v-btn",{staticClass:"btn me-2",attrs:{disabled:e.saving},on:{click:e.cancel}},[e._v("\n        "+e._s(e.$t("MembershipTypesManagement.button.cancel"))+"\n      ")]),e._v(" "),t("v-btn",{staticClass:"btn btn-primary",attrs:{disabled:e.saving,loading:e.saving},on:{click:e.saveMembershipType}},[e._v("\n        "+e._s(e.$t("MembershipTypesManagement.button.save"))+"\n      ")])],1)])],2)};m._withStripped=!0;const l={"membership-types-management":i,"membership-types-management-toolbar":p,"membership-types-management-list":a,"membership-types-management-form-drawer":s({data:()=>({error:null,fieldError:!1,drawer:!1,newMembershipType:!1,saving:!1,confirmNewPassword:null,membershipType:{}}),computed:{title(){return this.newMembershipType?this.$t("MembershipTypesManagement.addMembershipType"):this.$t("MembershipTypesManagement.editMembershipType")}},watch:{confirmNewPassword(){this.resetCustomValidity()},saving(){this.saving?this.$refs.membershipTypeFormDrawer.startLoading():this.$refs.membershipTypeFormDrawer.endLoading()},drawer(){this.drawer?(this.$refs.membershipTypeFormDrawer.open(),window.setTimeout((()=>{this.newMembershipType?this.$refs.nameInput.focus():this.$refs.descriptionInput.focus()}),200)):this.$refs.membershipTypeFormDrawer.close()}},created(){this.$root.$on("addNewMembershipType",this.addNewMembershipType),this.$root.$on("editMembershipType",this.editMembershipType)},methods:{resetCustomValidity(){this.$refs.nameInput.setCustomValidity("")},addNewMembershipType(){this.membershipType={},this.newMembershipType=!0,this.drawer=!0},editMembershipType(e){this.membershipType=Object.assign({},e),this.newMembershipType=!1,this.drawer=!0},saveMembershipType(e){if(!this.membershipType.name||this.membershipType.name.length<3||this.membershipType.name.length>30)this.handleError(this.$t("MembershipTypesManagement.error.invalidRoleName"));else if(!this.membershipType.description||this.membershipType.description.length<3||this.membershipType.description.length>255)this.handleError(this.$t("MembershipTypesManagement.error.invalidRoleDescription"));else if(e&&(e.preventDefault(),e.stopPropagation()),this.error=null,this.fieldError=!1,this.resetCustomValidity(),this.$refs.membershipTypeForm.validate()&&this.$refs.membershipTypeForm.$el.reportValidity())return this.saving=!0,fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/v1/membershipTypes`,{method:this.newMembershipType?"POST":"PUT",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(this.membershipType)}).then((e=>{if(!e||!e.ok){if(400===e.status)return e.text().then((e=>{throw this.fieldError=e,new Error(e)}));throw new Error(this.$t("IDMManagement.error.UnknownServerError"))}})).then((()=>this.$root.$emit("refreshMembershipTypes"))).then((()=>this.$refs.membershipTypeFormDrawer.close())).catch(this.handleError).finally((()=>this.saving=!1))},cancel(){this.drawer=!1},handleError(e){this.resetCustomValidity(),e?(this.fieldError&&"NAME:ALREADY_EXISTS"===this.fieldError?this.$refs.nameInput.setCustomValidity(this.$t("MembershipTypesManagement.message.sameNameAlreadyExists")):(this.error=String(e),window.setTimeout((()=>{this.error=null}),5e3)),window.setTimeout((()=>{this.$refs.membershipTypeForm.validate()&&this.$refs.membershipTypeForm.$el.reportValidity()}),200)):this.error=null}}},m,[],!1,null,null,null).exports};for(const e in l)Vue.component(e,l[e]);if(extensionRegistry){const e=extensionRegistry.loadComponents("MembershipTypesManagement");e&&e.length>0&&e.forEach((e=>{Vue.component(e.componentName,e.componentOptions)}))}document.dispatchEvent(new CustomEvent("displayTopBarLoading"));const h="MembershipTypesManagement",d="undefined"!=typeof eXo?eXo.env.portal.language:"en",c=`${eXo.env.portal.context}/${eXo.env.portal.rest}/i18n/bundle/locale.portlet.Portlets-${d}.json`;function y(){exoi18n.loadLanguageAsync(d,c).then((e=>{Vue.createApp({mounted(){document.dispatchEvent(new CustomEvent("hideTopBarLoading"))},template:`<membership-types-management id="${h}" />`,vuetify:Vue.prototype.vuetifyOptions,i18n:e},`#${h}`,"Membership Type Management")}))}return t})()));