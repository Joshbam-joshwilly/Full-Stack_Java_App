define((()=>(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{init:()=>m});var r=function(){var e=this,t=e._self._c;return t("v-app",[e.displayed?[t("v-card",{staticClass:"border-radius my-4",attrs:{flat:""}},[t("v-list",[t("v-list-item",[t("v-list-item-content",[t("v-list-item-title",{staticClass:"title text-color"},[e._v("\n              "+e._s(e.$t("cloudDriveSettings.label.title"))+"\n            ")]),e._v(" "),t("v-list-item-subtitle",{staticClass:"my-1 text-color"},[e._v("\n              "+e._s(e.$t("cloudDriveSettings.label.subtitle"))+"\n            ")]),e._v(" "),t("v-list-item-subtitle",{staticClass:"my-1 text-sub-title font-italic"},[t("cloud-drive-settings-status",{attrs:{connectors:e.connectors}},[t("template",{slot:"connectButton"},[e._v("\n                  "+e._s(e.$t("cloudDriveSettings.label.description"))+"\n                ")])],2)],1)],1),e._v(" "),t("v-list-item-action",[t("v-btn",{attrs:{icon:""},on:{click:e.openDriveConnectorsDrawer}},[t("em",{staticClass:"uiIconEdit uiIconLightBlue pb-2"})])],1)],1)],1)],1),e._v(" "),t("cloud-drive-settings-drawer",{attrs:{connectors:e.enabledConnectors}}),e._v(" "),t("cloud-drive-connector",{on:{"connectors-loaded":function(t){e.connectors=t},"display-alert":e.displayAlert}}),e._v(" "),t("cloud-drive-alert")]:e._e()],2)};function s(e,t,r,s,i,n,o,c){var l,a="function"==typeof e?e.options:e;if(t&&(a.render=t,a.staticRenderFns=r,a._compiled=!0),s&&(a.functional=!0),n&&(a._scopeId="data-v-"+n),o?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},a._ssrRegister=l):i&&(l=c?function(){i.call(this,(a.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(a.functional){a._injectStyles=l;var d=a.render;a.render=function(e,t){return l.call(t),d(e,t)}}else{var v=a.beforeCreate;a.beforeCreate=v?[].concat(v,l):[l]}return{exports:e,options:a}}r._withStripped=!0;const i=s({data:()=>({connectors:{},displayed:!0}),computed:{enabledConnectors(){return this.connectors||{}}},created(){document.addEventListener("hideSettingsApps",(()=>this.displayed=!1)),document.addEventListener("showSettingsApps",(()=>this.displayed=!0))},methods:{openDriveConnectorsDrawer(){this.$root.$emit("cloud-drive-connectors-drawer-open")},displayAlert(e,t){this.$root.$emit("connectors-connection-alert",{message:e,type:t||"success"})}}},r,[],!1,null,null,null).exports;var n=function(){var e=this,t=e._self._c;return t("div",[t("exo-drawer",{ref:"cloudDriveSettingsDrawer",staticClass:"cloudDriveSettingsDrawer",attrs:{id:"cloudDriveSettingsDrawer","body-classes":"hide-scroll decrease-z-index-more",right:""}},[t("template",{slot:"title"},[e._v("\n      "+e._s(e.$t("cloudDriveSettings.drawer.title"))+"\n    ")]),e._v(" "),t("template",{slot:"content"},[e.connectors&&0!==Object.keys(this.connectors).length?t("v-list",{attrs:{"two-line":""}},e._l(e.connectors,(function(r){return t("v-list-item",{key:r.id},[t("v-list-item-avatar",{staticClass:"rounded-0"},[t("v-avatar",{attrs:{tile:"",size:"40",height:"auto"}},[t("img",{attrs:{src:`${r.image}`,alt:r.name}})])],1),e._v(" "),t("v-list-item-content",[r.user?[t("v-list-item-title",[e._v("\n                "+e._s(e.$t("cloudDriveSettings.drawer.connectedAccountWith"))+":\n              ")]),e._v(" "),t("v-list-item-subtitle",{staticClass:"font-italic",attrs:{title:r.user}},[e._v("\n                "+e._s(r.user)+"\n              ")])]:[t("v-list-item-title",{staticClass:"title"},[e._v("\n                "+e._s(r.name)+"\n              ")])]],2),e._v(" "),t("v-list-item-action",[r.user?t("v-btn",{staticClass:"btn",attrs:{loading:r.loading},on:{click:function(t){return e.disconnect(r)}}},[e._v("\n              "+e._s(e.$t("cloudDriveSettings.drawer.button.disconnect"))+"\n            ")]):t("v-btn",{staticClass:"btn",attrs:{loading:r.loading},on:{click:function(t){return e.connect(r)}}},[e._v("\n              "+e._s(e.$t("cloudDriveSettings.drawer.button.connect"))+"\n            ")])],1)],1)})),1):t("div",{staticClass:"noEnabledConnectors d-flex flex-column align-center"},[t("span",{staticClass:"uiIconCloudDriveConnector material-icons ma-5"},[e._v("cloud_off")]),e._v(" "),t("p",[e._v(e._s(e.$t("cloudDriveSettings.drawer.noConnector")))])])],1)],2)],1)};n._withStripped=!0;const o=s({props:{connectors:{type:Object,default:null}},created(){this.$root.$on("cloud-drive-connectors-drawer-open",this.open)},methods:{open(){this.$refs.cloudDriveSettingsDrawer&&this.$refs.cloudDriveSettingsDrawer.open()},close(){this.$refs.cloudDriveSettingsDrawer&&this.$refs.cloudDriveSettingsDrawer.close()},connect(e){this.$root.$emit("cloud-drive-connect",e)},disconnect(e){this.$root.$emit("cloud-drive-disconnect",e)}}},n,[],!1,null,null,null).exports,c=s({data:function(){return{providers:{},userDrive:{},connectingProvider:"",drivesInProgress:{},alert:{message:"",type:""},connectorsImages:[]}},created(){this.$root.$on("cloud-drive-connect",this.connectToCloudDrive),this.$root.$on("cloud-drive-disconnect",this.disconnectFromCloudDrive),async function(){try{const e=await fetch(`${cloudDriveUtils.pageBaseUrl()}/portal/rest/clouddrive/document/drive/personal`,{credentials:"include",method:"GET"});return e.ok?e.json():e.text().then((e=>{throw cloudDriveUtils.log(`Error getting user drive: ${e.errorMessage?e.errorMessage:e}`),new Error(e)}))}catch(e){throw cloudDriveUtils.log(`Unable to get data: ${e.message}`),new Error("CloudFile.msg.ErrorReadingUserDrive")}}().then((e=>{this.userDrive={name:e.name,title:e.name,isSelected:!1,workspace:e.workspace,homePath:e.homePath},fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/clouddrive/settings/providers`,{credentials:"include",method:"GET"}).then((e=>{if(e&&e.ok)return e.json()})).then((e=>{this.providers=e})).then((()=>{this.connectorsImages=extensionRegistry.loadExtensions("cloud-drive-connectors","images")||[],this.connectorsImages&&0!==this.connectorsImages.length&&Object.values(this.providers).forEach((e=>{e.image=Object.values(this.connectorsImages[0]).find((t=>t.id===e.id)).path})),this.init()})).then((()=>{this.$emit("connectors-loaded",this.providers)}))})).catch((e=>{this.alert={message:e.message,type:"error"}}))},methods:{disconnectFromCloudDrive:function(e){var t,r,s;this.$set(e,"loading",!0),(t=this.userDrive.workspace,r=e.user,s=e.id,fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/clouddrive/disconnect?workspace=${t}&userEmail=${r}&providerId=${s}`,{credentials:"include",method:"DELETE"}).then((e=>{if(!e||!e.ok)throw new Error("Response code indicates a server error",e)}))).then((()=>{this.$set(e,"user",null),this.$emit("display-alert",this.$t("cloudDriveSettings.alert.disconnectSuccessMessage"))})).catch((()=>{this.$emit("display-alert",this.$t("cloudDriveSettings.alert.disconnectErrorMessage"),"error")})).finally((()=>{this.$set(e,"loading",!1)}))},connectToCloudDrive:function(e){this.$set(e,"loading",!0),this.$emit("connectors-loaded",this.providers),cloudDrives.init(this.userDrive.workspace,this.userDrive.homePath),this.connectingProvider=e.id,this.$emit("updateProgress",{progress:0}),cloudDrives.connect(e.id).then((t=>{this.openDriveFolder(t.drive.path,t.drive.title),this.drivesInProgress=Object.assign({},this.drivesInProgress,{[t.drive.title]:100}),this.$emit("updateDrivesInProgress",{drives:this.drivesInProgress}),this.$emit("updateProgress",{progress:100}),setTimeout((()=>{delete this.drivesInProgress[t.drive.title],this.$emit("updateDrivesInProgress",{drives:this.drivesInProgress}),this.$emit("updateProgress",{progress:null})}),3e3);const r=t.drive.email;var s;(s={connector:e.id,account:r},fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/clouddrive/settings`,{credentials:"include",method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}).then((e=>{if(!e||!e.ok)throw new Error("Response code indicates a server error",e)}))).then((()=>{t.drive.connected&&this.$set(e,"user",r),this.$emit("display-alert",this.$t("cloudDriveSettings.alert.successMessage"))})).catch((()=>{this.$emit("display-alert",this.$t("cloudDriveSettings.alert.errorSaveUserSettings"),"error")})).finally((()=>{this.$set(e,"loading",!1)}))}),(t=>{this.alert=t?{message:t,type:"error"}:{message:"Canceled",type:"info"},this.$set(e,"loading",!1),this.$emit("display-alert",this.$t("cloudDriveSettings.alert.errorMessage"),"error"),this.$emit("updateProgress",{progress:null})}),(e=>{e.drive.title&&(this.drivesInProgress=Object.assign({},this.drivesInProgress,{[e.drive.title]:e.progress}),this.$emit("updateDrivesInProgress",{drives:this.drivesInProgress}),this.openDriveFolder(e.drive.path,e.drive.title)),this.$emit("updateProgress",{progress:e.progress})}))},openDriveFolder:function(e,t){const r={name:t,title:t,path:e?e.split("/").pop():"",driveTypeCSSClass:`uiIconEcmsDrive-${this.connectingProvider}`,type:"drive",css:"uiIcon16x16FolderDefault uiIcon16x16nt_folder",driverType:"Personal Drives",isCloudDrive:!0};this.$emit("addDrive",r)},capitalized:e=>"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1),init(){fetch(`${eXo.env.portal.context}/${eXo.env.portal.rest}/clouddrive/settings`,{credentials:"include",method:"GET"}).then((e=>{if(e&&e.ok)return e.json()})).then((e=>{Object.keys(e).forEach(((t,r)=>{Object.values(this.providers).forEach((s=>{t===s.id&&this.$set(s,"user",Object.values(e)[r])}))}))}))}}},void 0,void 0,!1,null,null,null).exports;var l=function(){var e=this,t=e._self._c;return t("v-snackbar",{attrs:{left:!e.$vuetify.rtl,right:e.$vuetify.rtl,color:"transparent",elevation:"0",app:""},model:{value:e.snackbar,callback:function(t){e.snackbar=t},expression:"snackbar"}},[t("exo-notification-alert",{attrs:{alert:e.alert},on:{dismissed:e.clear}})],1)};l._withStripped=!0;const a=s({data:()=>({snackbar:!1,alert:null}),watch:{alert(){this.snackbar=!!this.alert}},created(){this.$root.$on("connectors-connection-alert",(e=>this.alert=e))},methods:{clear(){this.alert=null}}},l,[],!1,null,null,null).exports;var d=function(){var e=this,t=e._self._c;return e.connectedConnector.length>0?t("div",e._l(e.connectedConnector,(function(r,s){return t("div",{key:s,staticClass:"d-flex my-1"},[t("v-avatar",{attrs:{tile:"",size:"24",height:"auto"}},[t("img",{attrs:{src:r.image,alt:r.image}})]),e._v(" "),t("a",{staticClass:"mx-2 my-auto",on:{click:e.openDriveConnectorsDrawer}},[e._v("\n      "+e._s(r.user)+"\n    ")])],1)})),0):t("div",{on:{click:e.openDriveConnectorsDrawer}},[e._t("connectButton")],2)};d._withStripped=!0;const v={"cloud-drive-settings":i,"cloud-drive-settings-drawer":o,"cloud-drive-connector":c,"cloud-drive-alert":a,"cloud-drive-settings-status":s({props:{connectors:{type:Object,default:()=>null}},computed:{connectedConnector(){return Object.values(this.connectors).filter((e=>e.user))}},methods:{openDriveConnectorsDrawer(){this.$root.$emit("cloud-drive-connectors-drawer-open")}}},d,[],!1,null,null,null).exports};for(const e in v)Vue.component(e,v[e]);const u=eXo.env.portal.language||"en",h=`${eXo.env.portal.context}/${eXo.env.portal.rest}/i18n/bundle/locale.clouddrive.CloudDrive-${u}.json`,p=new Vuetify(eXo.env.portal.vuetifyPreset),g="CloudDriveSettingsApplication";function m(){exoi18n.loadLanguageAsync(u,h).then((e=>{Vue.createApp({template:`<cloud-drive-settings id="${g}" />`,vuetify:p,i18n:e},`#${g}`,"Cloud Drive Settings")}))}if(extensionRegistry){const e=extensionRegistry.loadComponents("CloudDriveSettings");e&&e.length>0&&e.forEach((e=>{Vue.component(e.componentName,e.componentOptions)}))}return Vue.use(Vuetify),t})()));